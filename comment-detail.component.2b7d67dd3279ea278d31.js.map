{"version":3,"sources":["webpack://vanilla-spa-webpack-boilerplate/./src/apis/base.service.js","webpack://vanilla-spa-webpack-boilerplate/./src/apis/comment.service.js","webpack://vanilla-spa-webpack-boilerplate/./src/modules/comments/comment-detail/comment-detail.component.js","webpack://vanilla-spa-webpack-boilerplate/./src/modules/comments/comment-detail/comment-detail.component.html","webpack://vanilla-spa-webpack-boilerplate/./src/modules/commons/footer/footer.component.js","webpack://vanilla-spa-webpack-boilerplate/./src/modules/commons/footer/footer.component.html","webpack://vanilla-spa-webpack-boilerplate/./src/modules/commons/header/header.component.html","webpack://vanilla-spa-webpack-boilerplate/./src/modules/commons/header/header.component.js"],"names":["apiClient","axios","baseURL","process","interceptors","request","use","config","error","Promise","reject","response","res","status","window","location","href","console","get","post","put","destroy","delete","CommentService","getAll","id","create","params","update","render","getRoute","group","Header","HeaderView","Footer","FooterView","CommentAPI","data","log","templateData","items","view","compileTemplate","groupEnd","afterRender","___HTML_LOADER_IMPORT_0___","URL","template"],"mappings":"8RAEMA,E,MAAYC,UAAa,CAC7BC,QAASC,0CAGXH,EAAUI,aAAaC,QAAQC,KAC7B,SAACC,GAAD,OAAYA,KACZ,SAACC,GAAD,OAAWC,QAAQC,OAAOF,MAG5BR,EAAUI,aAAaO,SAASL,KAC9B,SAACK,GAAD,OAAcA,KACd,SAACH,GACC,IAAMI,EAAMJ,EAAMG,SACC,MAAfC,EAAIC,SACNC,OAAOC,SAASC,KAAhB,UAA0Bb,4DAA1B,YAEFc,QAAQT,MAAR,uDAA8DI,EAAIC,SAClEJ,QAAQC,OAAOF,MAInB,IAAQU,EAAoClB,EAApCkB,IAAKC,EAA+BnB,EAA/BmB,KAAMC,EAAyBpB,EAAzBoB,IAAaC,EAAYrB,EAApBsB,Q,gDCrBlBC,EAAiB,CACrBC,OAAQ,kBAAMN,QAAI,cAClBA,IAAK,SAACO,GAAD,OAAQP,QAAI,aAAD,OAAcO,KAC9BC,OAAQ,SAACC,GAAD,OAAYR,QAAK,YAAaQ,IACtCC,OAAQ,SAACH,EAAIE,GAAL,OAAgBP,QAAI,aAAD,OAAcK,GAAME,IAC/CL,OAAQ,SAACG,GAAD,OAAQJ,QAAQ,aAAD,OAAcI,MAGvC,O,udCAA,IAoBa,EAnBL,EAyBR,EA1BsB,CACpBI,QAAM,6BAAE,2HACSC,UAAPL,EADF,EACEA,GACRR,QAAQc,MAAR,oBAA2BN,IAFrB,SAGmBO,aAHnB,cAGAC,EAHA,gBAImBC,aAJnB,cAIAC,EAJA,iBAKiBC,QAAeX,GALhC,QAKAd,EALA,OAME0B,EAAS1B,EAAT0B,KACRpB,QAAQqB,IAAID,GACNE,EAAe,CAAEN,aAAYE,aAAYK,MAAOH,GAEtD,IACEI,GAAOC,OCrBF,0MDqB4BH,GACjC,MAAO/B,GACPS,QAAQT,MAAMA,GAbV,OAeNS,QAAQqB,IAAIG,GACZxB,QAAQ0B,WAhBF,kBAiBCF,GAjBD,4CAAF,4CAmBNG,aAAW,6BAAE,6GACLZ,kBADK,uBAELE,kBAFK,2CAAF,8C,kaE1Bb,IAaa,EAZL,EAeR,EAhBe,CACbL,QAAM,6BAAE,mGACNZ,QAAQc,MAAM,WAEd,IACEU,GAAOC,OCRF,uNDSL,MAAOlC,GACPS,QAAQT,MAAMA,GANV,OAQNS,QAAQqB,IAAIG,GACZxB,QAAQ0B,WATF,kBAUCF,GAVD,2CAAF,4CAYNG,aAAW,6BAAE,iIAAF,8C,2HEfTC,EAA6B,IAAIC,IAAI,aAKzC,EAFW,8IAD2B,IAAyCD,GACuH,+nC,4TCDtM,IAaa,EAZL,EAeR,EAhBe,CACbhB,QAAM,6BAAE,mGACNZ,QAAQc,MAAM,WAEd,IACEU,GAAOC,OAAgBK,GACvB,MAAOvC,GACPS,QAAQT,MAAMA,GANV,OAQNS,QAAQqB,IAAIG,GACZxB,QAAQ0B,WATF,kBAUCF,GAVD,2CAAF,4CAYNG,aAAW,6BAAE,iIAAF,8C","file":"comment-detail.component.2b7d67dd3279ea278d31.js","sourcesContent":["import axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: process.env.API_URL,\n});\n\napiClient.interceptors.request.use(\n  (config) => config,\n  (error) => Promise.reject(error)\n);\n\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const res = error.response;\n    if (res.status === 401) {\n      window.location.href = `${process.env.BASE_URL}#/login`;\n    }\n    console.error(`Looks like there was a problem. Status Code: ${res.status}`);\n    Promise.reject(error);\n  }\n);\n\nconst { get, post, put, delete: destroy } = apiClient;\nexport { get, post, put, destroy };\n","import { get, post, put, destroy } from \"./base.service\";\n\nconst CommentService = {\n  getAll: () => get(\"/comments\"),\n  get: (id) => get(`/comments/${id}`),\n  create: (params) => post(\"/comments\", params),\n  update: (id, params) => put(`/comments/${id}`, params),\n  delete: (id) => destroy(`/comments/${id}`),\n};\n\nexport default CommentService;\n","import compileTemplate from \"Utils/compile-template\";\nimport { getRoute } from \"Utils/common\";\n\nimport CommentAPI from \"Apis/comment.service\";\n\nimport Header from \"../../commons/header/header.component\";\nimport Footer from \"../../commons/footer/footer.component\";\n\nimport template from \"./comment-detail.component.html\";\n\nconst CommentDetail = {\n  render: async () => {\n    const { id } = getRoute();\n    console.group(`/comments/${id}`);\n    const HeaderView = await Header.render();\n    const FooterView = await Footer.render();\n    const response = await CommentAPI.get(id);\n    const { data } = response;\n    console.log(data);\n    const templateData = { HeaderView, FooterView, items: data };\n    let view;\n    try {\n      view = compileTemplate(template, templateData);\n    } catch (error) {\n      console.error(error);\n    }\n    console.log(view);\n    console.groupEnd();\n    return view;\n  },\n  afterRender: async () => {\n    await Header.afterRender();\n    await Footer.afterRender();\n  },\n};\n\nexport default CommentDetail;\n","// Module\nvar code = \"${ HeaderView } <section class=\\\"container section\\\"> <h2 class=\\\"subtitle\\\">Comment Detail</h2> <% for (const key in items) { %> <p><%- key %>: <%- items[key] %></p> <% }; %> </section> ${ FooterView } \";\n// Exports\nexport default code;","import compileTemplate from \"Utils/compile-template\";\n\nimport template from \"./footer.component.html\";\n\nconst Footer = {\n  render: async () => {\n    console.group(\"#footer\");\n    let view;\n    try {\n      view = compileTemplate(template);\n    } catch (error) {\n      console.error(error);\n    }\n    console.log(view);\n    console.groupEnd();\n    return view;\n  },\n  afterRender: async () => {},\n};\n\nexport default Footer;\n","// Module\nvar code = \"<footer class=\\\"bg-light text-center\\\"> <div class=\\\"container p-4\\\"> <section class=\\\"mb-4\\\"> <p> This is a footer. You should've put something more useful here, instead I put this. </p> </section> </div> </footer> \";\n// Exports\nexport default code;","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"Assets/images/icon-192.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<nav class=\\\"navbar navbar-expand-lg bg-light navbar-light fixed-top\\\"> <div class=\\\"container\\\"> <a class=\\\"navbar-brand\\\" href=\\\"#/\\\"> <img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" width=\\\"28\\\" height=\\\"28\\\"/> </a> <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-mdb-toggle=\\\"collapse\\\" data-mdb-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\"> <i class=\\\"fas fa-bars\\\"></i> </button> <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\"> <ul class=\\\"navbar-nav me-auto mb-2 mb-lg-0\\\"> <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#/\\\">Home</a> </li> <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#/albums\\\">Album</a> </li> <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#/comments\\\">Comment</a> </li> <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#/photos\\\">Photo</a> </li> <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#/posts\\\">Post</a> </li> <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#/todos\\\">Todo</a> </li> <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#/users\\\">User</a> </li> </ul> <ul class=\\\"navbar-nav d-flex flex-row me-1\\\"> <li class=\\\"nav-item me-3 me-lg-0\\\"> <a class=\\\"btn btn-primary\\\" href=\\\"#/register\\\"> <strong>Sign up</strong> </a> <a class=\\\"btn btn-secondary\\\" href=\\\"#/login\\\">Log in</a> </li> </ul> </div> </div> </nav> \";\n// Exports\nexport default code;","import compileTemplate from \"Utils/compile-template\";\n\nimport template from \"./header.component.html\";\n\nconst Header = {\n  render: async () => {\n    console.group(\"#header\");\n    let view;\n    try {\n      view = compileTemplate(template);\n    } catch (error) {\n      console.error(error);\n    }\n    console.log(view);\n    console.groupEnd();\n    return view;\n  },\n  afterRender: async () => {},\n};\n\nexport default Header;\n"],"sourceRoot":""}